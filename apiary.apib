FORMAT: 1A
HOST: http://api.enshere.io/

# Ensphere Portal

This is the API documentation for the Ensphere Portal

## Communications [/communications]

### Count of All Active Communications [GET]
+ Request (application/json)

        {
            "location": 314 
        }
        
+ Response 201 (application/json)

        {
            "count": 10
        }

### List Communication Categories [GET]
Returns a list of Communicaitons Category names, IDs and other meta info

### Count of Active Communications in Each Category [GET]

### List All Active Communications [GET]
Returns a list of all active communication IDs

### Get Specified Communication [GET]
Returns a single communicaiton
+ Request (application/json)

        {
            "id": 123 
        }

+ Response 201 (application/json)

        [
            {
                "id": 123,
                "created_at": "2015-08-05T08:40:51.620Z",
                "updated_at": "2015-08-05T08:40:51.620Z",
                "deleted_at": "",
                "start": "2015-08-05T08:40:51.620Z",
                "end": "2015-08-05T08:40:51.620Z",
                "sender": 3,
                "importance": 1,
                "is_draft": 0,
                "subject": "This is a Sample Communication Title",
                "category": 9,
                "next": 124,
                "previous": 122,
                "tags": [
                    {
                        "id": 1
                    },
                    {
                        "id": 3
                    },
                    {
                        "id": 7
                    }
                ],
                "body": "<p>This is an examples of the body of a communication</p>"
                
                
            }
        ]



## Documents [/documents]

## Calendar [/calendar]

## Tasks [/tasks]

## Forms [/forms]

## Surveys [/surveys]

## Data Tables [/data-tables]

## Features [/features]

## Search [/search]

## Analytics [/analytics]

## Tags

## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }